#!/usr/bin/env python3
"""
Script de v√©rification de la connexion PostgreSQL pour Eventfy
"""

import psycopg2
from psycopg2 import OperationalError
import sys

def check_postgresql_connection():
    """V√©rifie la connexion √† PostgreSQL"""
    
    # Param√®tres de connexion
    connection_params = {
        'host': 'localhost',
        'port': '5432',
        'database': 'Eventfly',
        'user': 'postgres',
        'password': 'admin1234'
    }
    
    print("üîç V√©rification de la connexion PostgreSQL...")
    print("=" * 50)
    
    try:
        # Tenter la connexion
        print("üì° Tentative de connexion √† PostgreSQL...")
        connection = psycopg2.connect(**connection_params)
        
        # V√©rifier la version
        cursor = connection.cursor()
        cursor.execute("SELECT version();")
        version = cursor.fetchone()
        
        print("‚úÖ Connexion r√©ussie !")
        print(f"üìä Version PostgreSQL: {version[0]}")
        
        # V√©rifier la base de donn√©es
        cursor.execute("SELECT current_database();")
        current_db = cursor.fetchone()
        print(f"üóÑÔ∏è  Base de donn√©es actuelle: {current_db[0]}")
        
        # V√©rifier les tables (si elles existent)
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name;
        """)
        tables = cursor.fetchall()
        
        if tables:
            print(f"üìã Tables trouv√©es: {len(tables)}")
            for table in tables:
                print(f"   - {table[0]}")
        else:
            print("üìã Aucune table trouv√©e (normal si les migrations n'ont pas √©t√© appliqu√©es)")
        
        # Fermer la connexion
        cursor.close()
        connection.close()
        
        print("\nüéâ PostgreSQL est correctement configur√© !")
        print("   Vous pouvez maintenant lancer Django avec:")
        print("   python manage.py runserver")
        
        return True
        
    except OperationalError as e:
        print("‚ùå Erreur de connexion PostgreSQL:")
        print(f"   {e}")
        print("\nüîß Solutions possibles:")
        print("   1. V√©rifiez que PostgreSQL est d√©marr√©")
        print("   2. V√©rifiez que la base de donn√©es 'Eventfly' existe")
        print("   3. V√©rifiez les param√®tres de connexion")
        print("   4. Ex√©cutez le script setup_postgresql.sql")
        return False
        
    except Exception as e:
        print(f"‚ùå Erreur inattendue: {e}")
        return False

def create_database_if_not_exists():
    """Cr√©e la base de donn√©es si elle n'existe pas"""
    
    # Se connecter √† postgres (base de donn√©es par d√©faut)
    connection_params = {
        'host': 'localhost',
        'port': '5432',
        'database': 'postgres',
        'user': 'postgres',
        'password': 'admin1234'
    }
    
    try:
        connection = psycopg2.connect(**connection_params)
        cursor = connection.cursor()
        
        # V√©rifier si la base de donn√©es existe
        cursor.execute("SELECT 1 FROM pg_database WHERE datname = 'Eventfly';")
        exists = cursor.fetchone()
        
        if not exists:
            print("üóÑÔ∏è  Cr√©ation de la base de donn√©es 'Eventfly'...")
            cursor.execute('CREATE DATABASE "Eventfly";')
            print("‚úÖ Base de donn√©es 'Eventfly' cr√©√©e avec succ√®s !")
        else:
            print("‚úÖ Base de donn√©es 'Eventfly' existe d√©j√†")
        
        cursor.close()
        connection.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation de la base de donn√©es: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ V√©rification PostgreSQL pour Eventfy")
    print("=" * 50)
    
    # D'abord, essayer de cr√©er la base de donn√©es si elle n'existe pas
    if create_database_if_not_exists():
        # Ensuite, v√©rifier la connexion
        check_postgresql_connection()
    else:
        print("‚ùå Impossible de cr√©er la base de donn√©es")
        sys.exit(1)
